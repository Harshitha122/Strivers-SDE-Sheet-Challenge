/*
Store elements in decreasing order in deque so that if we found a ele greater than the first ele pop first ele and insert into dequ,
since the least recent used max ele doesn't matter

*/


#include <bits/stdc++.h> 
vector<int> slidingWindowMaximum(vector<int> &nums, int &k)
{
    //    Write your code here.
    
    vector<int> res;
    deque<int> dq;
    for(int i=0;i<nums.size();i++){
        if(!dq.empty()&& dq.front()==i-k){
            dq.pop_front();
        }
        while(!dq.empty()&& nums[dq.back()]<=nums[i]){
            dq.pop_back();
        }
        dq.push_back(i);
        if(i>=k-1){
            res.push_back(nums[dq.front()]);
        }
        
    }
    return res;
}

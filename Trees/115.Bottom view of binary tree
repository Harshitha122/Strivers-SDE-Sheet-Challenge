#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
    vector<int> res;
    if(root==NULL){
        return res;
    }
    map<int,int> mp;
    queue<pair<BinaryTreeNode<int>*,int>> q;
    q.push(make_pair(root,0));
    while(!q.empty()){
        pair<BinaryTreeNode<int>*,int> temp=q.front();
        q.pop();
        BinaryTreeNode<int>* frontnode=temp.first;
        int hd=temp.second;
        mp[hd]=frontnode->data;
        if(frontnode->left){
            q.push({frontnode->left,hd-1});
        }
        if(frontnode->right){
            q.push({frontnode->right,hd+1});
        }
    }
    for(auto x:mp){
        res.push_back(x.second);
    }
    return res;
    
}
